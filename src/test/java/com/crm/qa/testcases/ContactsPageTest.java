package com.crm.qa.testcases;

import java.io.IOException;

import org.apache.log4j.PropertyConfigurator;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.openqa.selenium.By;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import org.testng.log4testng.Logger;

import com.crm.qa.base.TestBase;
import com.crm.qa.pages.ContactsPage;
import com.crm.qa.pages.HomePage;
import com.crm.qa.pages.LoginPage;
import com.crm.qa.util.TestUtil;

public class ContactsPageTest extends TestBase{

	LoginPage loginPage;
	HomePage homePage;
	TestUtil testUtil;
	ContactsPage contactsPage;
	
	String sheetName = "contacts"; // FreeCrmTestData excel file contacts sheet name we have to pass in data provider
	
	   
	public ContactsPageTest(){
			super();	
	}
	
	
	@BeforeMethod
	public void setUp() throws InterruptedException {
		
		initialization(); //open ff browser and initialize everything
		testUtil = new TestUtil(); //switching of frame
		contactsPage = new ContactsPage();//to access methods of ContactsPage
		loginPage = new LoginPage();//to access methods of LoginPage
		homePage = loginPage.login(prop.getProperty("username"), prop.getProperty("password")); //login into application
		//TestUtil.runTimeInfo("error", "login successful");
		Thread.sleep(2000);
		testUtil.switchToFrame();//contacts is available on frame before clicking u have to switch to frame
		contactsPage = homePage.clickOnContactsLink();//from homepage->click on contacts
	}
	
	@Test(priority=1)
	public void verifyContactsPageLabelTest() throws InterruptedException{
		Assert.assertTrue(contactsPage.verifyContactsLabel(), "contacts label is missing on the page");
	    Thread.sleep(3000);
	}
	
	@Test(priority=2)
	public void selectSingleContactsTest() throws InterruptedException{
		contactsPage.selectContactsByName("test2 test2");
		Thread.sleep(3000);
	}
	
	@Test(priority=3)
	public void selectMultipleContactsTest() throws InterruptedException{
		contactsPage.selectContactsByName("test2 test2");
		Thread.sleep(1000);
		contactsPage.selectContactsByName("ui uiii");
        Thread.sleep(3000);
	}
	
	//Till here run everything should run smoothly
	//Now to run all 3 test files together we gonna create testng.xml file which is runner file
	//at project lever create src/main/resources folder
	//in that folder create new file -> testng.xml
	//run the entire suite and refresh the project
	//in test-output ->index.html and emailable-report.html both reports are useful there are generated by testng itself they are not fancy report
	
	/*Part 4 - This test is hard coded which is not feasible always 
	 * thus we need data provider...
	 * @Test(priority=4)
	public void validateCreateNewContactTest() throws InterruptedException{
		homePage.clickOnNewContactLink(); //to come on new contact form after mouse hover on Contacts tab
		Thread.sleep(1000);
		contactsPage.createNewContact("Mr.", "Tom", "Peter", "Google"); //hard coded value
		Thread.sleep(1000);
	}//only run this method and see whether it is entering value or not to do so select this method only and run as TestNG test
	*/
	
	//Part 4 - data driven approach , we will create excel file for storing our data
	//STEP 6- To create our data excel sheet in -> src/main/java -> com.crm.qa.testdata -> FreeCrmTestData.xlsx
	//Then create data provider here
	@DataProvider
	public Object[][] getCRMTestData(){
		Object data[][] = TestUtil.getTestData(sheetName); //once we pass the sheetname it will go to gettestdata method of testutil class and will start fetching data from excel file and will return data that is two dimensional obj array thus need to store in same 
		return data; //returning two dimension array
	}
	
	//for validateCreateNewContactTest method , getCRMTestData is the data provider thus this method will fetch data from the data provider
	//whenever u are fetching data from data provider, the no of columns available in the excel sheet same no of data you have to pass in the test method otherwise it will give you error column mismatch error...as these 4 variables are getting the data from data provider
	@Test(priority=4, dataProvider="getCRMTestData")
	public void validateCreateNewContactTest(String title, String firstName, String lastName, String company) throws InterruptedException{
		homePage.clickOnNewContactLink(); //to come on new contact form after mouse hover on Contacts tab
		contactsPage.createNewContact(title, firstName, lastName, company);
		//this method will be executed 3 times as there are 3 sets of data
	}
	
	//never use keyword driven approach it is not recommended from maintenance point of view
	
	@AfterMethod
	public void tearDown(){
		driver.quit();
	}
	
	
}
